services:
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=task_tracker
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - task-network

  mongodb:
    image: mongo:5.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      - MONGO_INITDB_DATABASE=task_tracker
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - task-network

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    networks:
      - task-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - task-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "tasks:1:1"
    depends_on:
      - zookeeper
    networks:
      - task-network

  auth-service:
    build:
      context: .
      dockerfile: auth_service/docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=your-secure-secret-key-here
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - MASTER_USERNAME=admin
      - MASTER_PASSWORD=secret
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - task-network

  task-service:
    build:
      context: .
      dockerfile: task_service/docker/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8000
      - MONGODB_URL=mongodb://mongo:mongo@mongodb:27017/task_tracker?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - auth-service
      - mongodb
      - redis
      - kafka
    networks:
      - task-network

  task-consumer:
    build:
      context: .
      dockerfile: task_consumer/docker/Dockerfile
    environment:
      - MONGODB_URL=mongodb://mongo:mongo@mongodb:27017/task_tracker?authSource=admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - mongodb
    networks:
      - task-network

networks:
  task-network:
    driver: bridge